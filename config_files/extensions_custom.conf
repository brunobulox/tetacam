[from-internal-custom]


;# //activate deactivate motion
exten => *666,1,Answer
exten => *666,n,Wait(1)
exten => *666,n,Playback(activated)
exten => *666,n,Wait(1)
exten => *666,n,System(/usr/bin/control_motion.sh start)
exten => *666,n,Wait(1)
exten => *666,n,Hangup()

exten => *777,1,Answer
exten => *777,n,Wait(1)
exten => *777,n,System(/usr/bin/control_motion.sh stop)
exten => *777,n,Playback(de-activated)
exten => *777,n,Wait(1)
exten => *777,n,Hangup()

;# // BEGIN SMS Dictator
exten => 767,1,Answer
exten => 767,n,Set(GVACCT=acctname) ; your Google Voice account name without @gmail.com
exten => 767,n,Set(GVPASS=acctpass) ; your Google Voice account password
exten => 767,n,Wait(1)
exten => 767,n(record),Flite("After the beep. I will reecord your S.M.S message. When you're finished. press the pound key.")
exten => 767,n,agi(speech-recog.agi,en-US)
exten => 767,n,Noop(= Script returned: ${status} , ${id} , ${confidence} , ${utterance} =)
exten => 767,n,Flite("I think you said: ${utterance}")
exten => 767,n,Flite("If this is correct. press 1.")
exten => 767,n,Read(MYCHOICE,beep,1)
exten => 767,n,GotoIf($["foo${MYCHOICE}" = "foo1"]?nextpick)
exten => 767,n,Playback(goodbye)
exten => 767,n,Goto(done)
exten => 767,n(nextpick),Flite("To enter a phone number: press 1. For a name: press 2.")
exten => 767,n,Read(MYCHOICE,beep,1)
exten => 767,n,GotoIf($["foo${MYCHOICE}" = "foo1"]?continue)
exten => 767,n,GotoIf($["foo${MYCHOICE}" = "foo2"]?pickcontact)
exten => 767,n,Playback(goodbye)
exten => 767,n,Goto(done)
exten => 767,n(pickcontact),Set(SMSMSG=${utterance})
exten => 767,n(pickagain),Flite("At the beep say the name of the person or company you wish to contact. Then press the pound key.")
exten => 767,n,agi(speech-recog.agi,en-US)
exten => 767,n,Noop(= Script returned: ${status} , ${id} , ${confidence} , ${utterance} =)
exten => 767,n,AGI(nv-callwho.php,${utterance})
exten => 767,n,NoOp(Number to call: ${NUM2CALL})
exten => 767,n,GotoIf($["foo${NUM2CALL}" = "foo0"]?pickagain)
exten => 767,n,GotoIf($["foo${NUM2CALL}" = "foo"]?pickagain)
exten => 767,n,Flite("Sending S.M.S message.")
exten => 767,n,System(/usr/local/bin/gvoice -e ${GVACCT}@gmail.com -p ${GVPASS} send_sms ${NUM2CALL} "${SMSMSG}")
exten => 767,n,Flite("S.M.S message has been sent. Good bye.")
exten => 767,n,Goto(done)
exten => 767,n(continue),Flite("Please enter the 10 digit S.M.S number.")
exten => 767,n,Read(SMSNUM,beep,10)
exten => 767,n,Flite("S.M.S message will be sent two.")
exten => 767,n,SayDigits("${SMSNUM}")
exten => 767,n,Flite("To proceed. press 1.")
exten => 767,n,Read(MYPICK,beep,1)
exten => 767,n,GotoIf($["foo${MYPICK}" = "foo1"]?proceed)
exten => 767,n,Playback(goodbye)
exten => 767,n,Goto(done)
exten => 767,n(proceed),Flite("Sending S.M.S message.")
exten => 767,n,System(/usr/local/bin/gvoice -e ${GVACCT}@gmail.com -p ${GVPASS} send_sms ${SMSNUM} "${utterance}")
exten => 767,n,Flite("S.M.S message has been sent. Good bye.")
exten => 767,n(done),Hangup
;# // END SMS Dictator

;# // BEGIN Reminders
exten => 123,1,Answer
exten => 123,n,Wait(1)
;exten => 123,n,Authenticate(12345678)
exten => 123,n,Goto(reminder,s,1)
;# // END Reminders

;# // BEGIN nv-callwho
exten => 411,1,Answer
exten => 411,2,Wait(1)
exten => 411,3,Set(TIMEOUT(digit)=7)
exten => 411,4,Set(TIMEOUT(response)=10)
exten => 411,5,GotoIf($[${STAT(e,/usr/bin/swift)}]?8)
exten => 411,6,Flite("After the beep: Say the name of the contact you wish to call. Then press pound.")
exten => 411,7(record),agi(speech-recog.agi,en-US)
exten => 411,8,Noop(= Script returned: ${status} , ${id} , ${confidence} , ${utterance} =)
exten => 411,9,AGI(nv-callwho.php,${utterance})
exten => 411,10,NoOp(Number to call: ${NUM2CALL})
exten => 411,11,GotoIf($["foo${NUM2CALL}" = "foo0"]?15)
exten => 411,12,Goto(outbound-allroutes,${NUM2CALL},1)
exten => 411,13,Wait(1)
exten => 411,14,Hangup
;# // END nv-callwho

;# // BEGIN Weather by Zip Code
exten => 947,1,Answer
exten => 947,2,Wait(1)
exten => 947,3,Flite("At the beep enter the five digit zip code for the weather report you wish to retrieve.")
exten => 947,4,Read(ZIPCODE,beep,5)
exten => 947,5,Flite("Please hold a moment while we contact the National Weather Service for your report.")
exten => 947,6,AGI(nv-weather-zip.php,${ZIPCODE})
exten => 947,7,NoOp(Wave file: ${TMPWAVE})
exten => 947,8,Playback(${TMPWAVE})
exten => 947,9,Hangup
;# // END Weather by Zip Code

;# // BEGIN nv-weather-yahoo
exten => 948,1,Answer
exten => 948,n,Wait(1)
exten => 948,n,Set(TIMEOUT(digit)=7)
exten => 948,n,Set(TIMEOUT(response)=10)
;exten => 948,n(retry),agi(googletts.agi,"After the beep say the city and state or province of the weather report you wish to retrieve. Then press pound.",en)
exten => 948,n(retry),Flite("After the beep say the city and state or country of the weather report you wish to retrieve. Then press pound.")
exten => 948,n,agi(speech-recog.agi,en-US)
exten => 948,n,Noop(= Script returned: ${status} , ${id} , ${confidence} , ${utterance} =)
exten => 948,n,GotoIf($["${confidence}" > "0.4"]?proceed:retry)
;exten => 948,n(proceed),agi(googletts.agi,"Please hold a moment while we retrieve your report for ${utterance}.",en)
exten => 948,n(proceed),Flite("Please hold a moment while we retrieve your report for ${utterance}.")
exten => 948,n,AGI(nv-weather-yahoo.php,${utterance})
exten => 948,n,NoOp(Forecast: ${WEATHER})
exten => 948,n,GotoIf($["foo${WEATHER}" != "foo"]?wthrrpt)
exten => 948,n,Flite("Sorry. No weather information is currently available. Please try again later. Good bye.")
exten => 948,n,Hangup
;exten => 948,n(wthrrpt),agi(googletts.agi,"${WEATHER}",en)
exten => 948,n(wthrrpt),Flite("${WEATHER}")
exten => 948,n,Hangup
;# // END nv-weather-yahoo

;# // BEGIN nv-weather-wunderground
exten => 949,1,Answer
exten => 949,n,Wait(1)
exten => 949,n,Set(TIMEOUT(digit)=7)
exten => 949,n,Set(TIMEOUT(response)=10)
;exten => 949,n(retry),agi(googletts.agi,"After the beep say the city and state or province of the weather report you wish to retrieve. Then press pound.",en)
exten => 949,n(retry),Flite("After the beep say the city and state or country of the weather report you wish to retrieve. Then press pound.")
exten => 949,n,agi(speech-recog.agi,en-US)
exten => 949,n,Noop(= Script returned: ${status} , ${id} , ${confidence} , ${utterance} =)
exten => 949,n,GotoIf($["${confidence}" > "0.4"]?proceed:retry)
;exten => 949,n(proceed),agi(googletts.agi,"Please hold a moment while we retrieve your report for ${utterance}.",en)
exten => 949,n(proceed),Flite("Please hold a moment while we retrieve your report for ${utterance}.")
exten => 949,n,AGI(nv-weather-wunderground.php,${utterance})
exten => 949,n,NoOp(Forecast: ${WEATHER})
exten => 949,n,GotoIf($["foo${WEATHER}" != "foo"]?wthrrpt)
exten => 949,n,Flite("Sorry. No weather information is currently available. Please try again later. Good bye.")
exten => 949,n,Hangup
;exten => 949,n(wthrrpt),agi(googletts.agi,"${WEATHER}",en)
exten => 949,n(wthrrpt),Flite("${WEATHER}")
exten => 949,n,Hangup
;# // END nv-weather-wunderground

;# // BEGIN nv-stocks-google
exten => 950,1,Answer
exten => 950,n,Wait(1)
exten => 950,n,Set(TIMEOUT(digit)=7)
exten => 950,n,Set(TIMEOUT(response)=10)
exten => 950,n(retrys),Flite("After the beep say the stock symbol for the report to retrieve. Then press pound.")
exten => 950,n,agi(speech-recog.agi,en-US)
exten => 950,n,Noop(= Script returned: ${status} , ${id} , ${confidence} , ${utterance} =)
exten => 950,n,GotoIf($["${confidence}" > "0.3"]?proceeds:retrys)
exten => 950,n(proceeds),Flite("Please hold a moment while we retrieve your report for ${utterance}.")
exten => 950,n,AGI(nv-stocks-google.php,${utterance})
exten => 950,n,NoOp(Stock report: ${STOCK})
exten => 950,n,Flite("${STOCK}")
exten => 950,n,Hangup
;# // END nv-stocks-google

;# // BEGIN nv-news-google
exten => 951,1,Answer
exten => 951,n,Wait(1)
exten => 951,n,Set(TIMEOUT(digit)=7)
exten => 951,n,Set(TIMEOUT(response)=10)
exten => 951,n(proceed),Flite("Please hold a moment while we retrieve the latest news headlines.")
exten => 951,n,AGI(nv-news-google.php,5)
exten => 951,n,NoOp(News: ${NEWS})
exten => 951,n,Flite("${NEWS}")
exten => 951,n,Hangup
;# // END nv-news-google

exten => _000.,1,SayDigits(${EXTEN:2},) ; extensions dialed with 000 prefix get looked up in AsteriDex
exten => _000.,2,AGI(asteridex.agi,${EXTEN})
exten => _000.,3,GotoIf($["${DIAL:0:2}" = "00"]?97)
exten => _000.,4,NoOp(Number to Dial: ${DIAL})
exten => _000.,5,NoOp(Person to Dial: ${DUDE})
exten => _000.,6,Flite("Connecting to: ${DUDE}. One moment please.")
exten => _000.,7,Goto(outbound-allroutes,${DIAL},1)
exten => _000.,8,Hangup()
exten => _000.,97,Playback(num-not-in-db)
exten => _000.,98,Playback(goodbye)
exten => _000.,99,Hangup()

;# // BEGIN new-time
[new-time]
exten => s,1,ringing
exten => s,2,Set(FutureTime=$[${EPOCH} + 8])
exten => s,3,Set(FutureTimeMod=$[${FutureTime} % 10])
exten => s,4,Set(FutureTime=$[${FutureTime} - ${FutureTimeMod}])
;90 in next line is max # seconds connection can be held open. Use multiples of 10.
exten => s,5,Set(MaxConnectTime=$[${FutureTime} + 90])
exten => s,6,Set(FutureTimeMod=$[${FutureTime} - ${EPOCH}])
exten => s,7,GotoIf($["${FutureTimeMod}" < "0"]?10:8)
exten => s,8,wait(1)
exten => s,9,goto(6)
exten => s,10,Answer
exten => s,11,Set(FutureTime=$[${FutureTime} + 10])
exten => s,12,Set(FutureTimeMod=$[${FutureTime} % 60])
exten => s,13,wait(1)
exten => s,14,playback(at-tone-time-exactly)
exten => s,15,SayUnixTime(${FutureTime},,IM)
exten => s,16,GotoIf($["${FutureTimeMod}" = "0"]?17:19)
exten => s,17,SayUnixTime(${FutureTime},,p)
exten => s,18,goto(22)
exten => s,19,playback(and)
exten => s,20,SayUnixTime(${FutureTime},,S)
exten => s,21,playback(seconds)
exten => s,22,Set(FutureTimeMod=$[${FutureTime} - ${EPOCH}])
exten => s,23,GotoIf($["${FutureTimeMod}" < "1"]?26:24)
exten => s,24,wait(1)
exten => s,25,goto(22)
exten => s,26,playback(beep)
exten => s,27,Set(FutureTimeMod=$[${MaxConnectTime} - ${EPOCH}])
exten => s,28,GotoIf($["${FutureTimeMod}" < "1"]?29:11)
exten => s,29,Hangup
;# // END new-time


[reminder]
exten => s,1,Set(TIMEOUT(digit)=7)
exten => s,2,Set(TIMEOUT(response)=10)
exten => s,3,Playback(custom/reminder1)
exten => s,4,Wait(2)
exten => s,5,Set(TMPMSG=${CUT(UNIQUEID,.,-1)}${CUT(UNIQUEID,.,2-)})
exten => s,6,Record(custom/${TMPMSG}:gsm)
exten => s,7,Wait(1)
exten => s,8,Playback(custom/${TMPMSG})
exten => s,9,Wait(1)
exten => s,10,Background(vm-review)
exten => s,11,WaitExten()
exten => 1,1,Goto(reminder7,s,1)
exten => 2,1,Goto(s,8)
exten => 3,1,Goto(s,3)
exten => t,1,Goto(s,10)
exten => i,1,Playback(goodbye)
exten => i,2,Hangup
exten => h,1,Hangup

[reminder2]
exten => s,1,Set(TIMEOUT(digit)=7)
exten => s,2,Set(TIMEOUT(response)=10)
exten => s,3,Read(APPTDT,custom/reminder2,8) 
exten => s,4,AGI(checkdate.php,${APPTDT})
exten => s,5,GotoIf($["foo${HOTDATE}" = "fooBAD"]?99,1)
exten => s,6,Playback(you-entered)
exten => s,7,GotoIf($["foo${HOTDATE}" = "fooTODAY"]?s,10)
exten => s,8,SayUnixTime(${HOTDATE},,ABdY)
exten => s,9,Goto(s,11)
exten => s,10,Playback(custom/today)
exten => s,11,Goto(reminder3,s,1)
exten => 99,1,Playback(conf-errormenu)
exten => 99,2,Goto(s,3)
exten => t,1,Goto(s,3)
exten => i,1,Goto(s,3)
exten => h,1,Hangup

[reminder3]
exten => s,1,Set(TIMEOUT(digit)=7)
exten => s,2,Set(TIMEOUT(response)=10)
exten => s,3,Background(if-correct-press)
exten => s,4,Background(digits/1)
exten => s,5,Background(otherwise-press)
exten => s,6,Background(digits/2)
exten => s,7,Background(press-star-cancel)
exten => s,8,WaitExten()
exten => 1,1,Goto(reminder4,s,1)
exten => 2,1,Goto(reminder2,s,1)
exten => *,1,Playback(goodbye)
exten => *,2,System(/bin/rm -f /var/lib/asterisk/sounds/custom/${TMPMSG}.gsm)
exten => *,3,Hangup
exten => t,1,Goto(reminder2,s,6)
exten => i,1,Goto(reminder2,s,6)
exten => h,1,Hangup

[reminder4]
exten => s,1,Set(TIMEOUT(digit)=7)
exten => s,2,Set(TIMEOUT(response)=10)
exten => s,3,Read(APPTTIME,custom/reminder3,4)
exten => s,4,GotoIf($["foo${APPTTIME}" < "foo1200"]?reminder5,s,1)
exten => s,5,AGI(checktime.php,${APPTDT},${APPTTIME},0,${APPTPHONE})
exten => s,6,GotoIf($["foo${HOTTIME}" = "fooBAD"]?99,1)
exten => s,7,Playback(you-entered)
exten => s,8,SayUnixTime(${HOTTIME},,ABdY)
exten => s,9,Playback(digits/at)
exten => s,10,SayUnixTime(${HOTTIME},,IMP)
exten => s,11,Goto(s,18)
exten => s,12,AGI(checktime.php,${APPTDT},${APPTTIME},1200,${APPTPHONE})
exten => s,13,GotoIf($["foo${HOTTIME}" = "fooBAD"]?99,1)
exten => s,14,Playback(you-entered)
exten => s,15,SayUnixTime(${HOTTIME},,ABdY)
exten => s,16,Playback(digits/at)
exten => s,17,SayUnixTime(${HOTTIME},,IMp)
exten => s,18,Goto(reminder6,s,1)
exten => 99,1,Playback(conf-errormenu)
exten => 99,2,Goto(s,3)
exten => t,1,Goto(s,3)
exten => i,1,Goto(s,3)
exten => h,1,Hangup

[reminder5]
exten => s,1,Set(TIMEOUT(digit)=7)
exten => s,2,Set(TIMEOUT(response)=10)
exten => s,3,Background(1-for-am-2-for-pm)
exten => s,4,WaitExten()
exten => 1,1,Goto(reminder4,s,5)
exten => 2,1,Goto(reminder4,s,12)
exten => *,1,Playback(goodbye)
exten => *,2,System(/bin/rm -f /var/lib/asterisk/sounds/custom/${TMPMSG}.gsm)
exten => *,3,Hangup
exten => t,1,Goto(reminder4,s,1)
exten => i,1,Goto(s,1)
exten => h,1,Hangup

[reminder6]
exten => s,1,Set(TIMEOUT(digit)=7)
exten => s,2,Set(TIMEOUT(response)=10)
exten => s,3,Background(if-correct-press)
exten => s,4,Background(digits/1)
exten => s,5,Background(otherwise-press)
exten => s,6,Background(digits/2)
exten => s,7,Background(press-star-cancel)
exten => s,8,WaitExten()
exten => 1,1,Goto(reminder9,s,1)
exten => 2,1,Goto(reminder4,s,1)
exten => *,1,Playback(goodbye)
exten => *,2,System(/bin/rm -f /var/lib/asterisk/sounds/custom/${TMPMSG}.gsm)
exten => *,3,Hangup
exten => t,1,Goto(reminder6,s,3)
exten => i,1,Goto(reminder6,s,3)
exten => h,1,Hangup

[reminder7]
exten => s,1,Set(TIMEOUT(digit)=7)
exten => s,2,Set(TIMEOUT(response)=10)
exten => s,3,Read(APPTPHONE,custom/reminder4,0)
exten => s,4,Goto(reminder8,s,1)
exten => t,1,Goto(reminder8,s,1)
exten => i,1,Goto(s,3)
exten => #,1,Goto(reminder8,s,1)
exten => h,1,Hangup

[reminder8]
exten => s,1,Set(TIMEOUT(digit)=7)
exten => s,2,Set(TIMEOUT(response)=10)
exten => s,3,GotoIf($["foo${APPTPHONE}" = "foo"]?4:5)
exten => s,4,Set(APPTPHONE=${CALLERID(number)})
exten => s,5,Playback(you-entered)
exten => s,6,SayDigits(${APPTPHONE})
exten => s,7,Background(if-correct-press)
exten => s,8,Background(digits/1)
exten => s,9,Background(otherwise-press)
exten => s,10,Background(digits/2)
exten => s,11,Background(press-star-cancel)
exten => s,12,WaitExten()
exten => 1,1,Goto(reminder2,s,1)
exten => 2,1,Goto(reminder7,s,1)
exten => *,1,Playback(goodbye)
exten => *,2,System(/bin/rm -f /var/lib/asterisk/sounds/custom/${TMPMSG}.gsm)
exten => *,3,Hangup
exten => t,1,Goto(reminder8,s,5)
exten => i,1,Goto(reminder8,s,5)
exten => h,1,Hangup

[reminder9]
exten => s,1,Set(TIMEOUT(digit)=7)
exten => s,2,Set(TIMEOUT(response)=10)
exten => s,3,Read(APPTRECUR,custom/reminder6,1)
exten => s,4,Goto(reminder9a,s,1)
exten => t,1,Goto(s,3)
exten => i,1,Goto(s,3)
exten => #,1,Goto(reminder9a,s,1)
exten => h,1,Hangup


[reminder9a]
exten => s,1,NoOp(APPTDT: ${APPTDT})
exten => s,2,NoOp(APPTTIME: ${APPTTIME})
exten => s,3,NoOp(APPTPHONE: ${APPTPHONE})
exten => s,4,NoOp(RECURRING: ${APPTRECUR})
exten => s,5,NoOp(APPTMSG: /var/lib/asterisk/sounds/custom/${APPTTIME}.${APPTDT}.${APPTPHONE}.gsm)
exten => s,6,Playback(your-msg-has-been-saved)
exten => s,7,Playback(goodbye)
exten => s,8,Wait(2)
exten => s,9,Hangup
exten => h,1,System(/bin/mv -f /var/lib/asterisk/sounds/custom/${TMPMSG}.gsm /var/lib/asterisk/sounds/custom/${APPTTIME}.${APPTDT}.${APPTPHONE}.gsm)
exten => h,2,DeadAGI(reminder.php,${APPTDT},${APPTTIME},${APPTPHONE},${APPTRECUR})
exten => h,3,Hangup

[remindem]
exten => s,1,Answer
exten => s,2,Wait(2)
exten => s,3,Set(TIMEOUT(digit)=7)
exten => s,4,Set(TIMEOUT(response)=10)
exten => s,5,Playback(custom/reminder5)
exten => s,6,Wait(2)
exten => s,7,Playback(custom/${MSG})
exten => s,8,Set(TIMEOUT(digit)=4)
exten => s,9,Set(TIMEOUT(response)=5)
exten => s,10,Set(counter=1)
exten => s,11,Background(to-hear-msg-again)
exten => s,12,Background(press-1)
exten => s,13,Background(otherwise-press)
exten => s,14,Read(lepick,digits/2,1)
exten => s,15,GotoIf($["${lepick}" = "2"]?alldone,1:onemo,1)
exten => onemo,1,NoOp(Callee Replayed Message. Dialed: ${APPTPHONE}.)
exten => onemo,2,Playback(custom/${MSG})  ; playing again by request
exten => onemo,3,Set(counter=${counter}+1)
exten => onemo,4,GotoIf($["${counter}" = "1+1+1"]?alldone,1:s,11)
exten => alldone,1,Background(goodbye)
exten => alldone,2,NoOp(Callee Acknowledged Call. Dialed: ${APPTPHONE}.)
exten => alldone,3,Hangup
exten => t,1,NoOp(Callee's Answering Machine probably answered. Dialed: ${APPTPHONE}.)
exten => t,2,Background(restarting)
exten => t,3,Wait(1)
exten => t,4,Playback(custom/${MSG})  ; playing again for ans machine
exten => t,5,Background(goodbye)
exten => t,6,Hangup
exten => i,1,Goto(t,2)
exten => o,1,Goto(t,2)
exten => h,1,Set(email=${DB(EMAIL/${APPTPHONE})}) ; see if number to call has an associated email address
exten => h,2,GotoIf($["foo${email}" = "foo"]?4)
exten => h,3,system(mime-construct --to ${email} --subject "Telephone Reminder" --file /var/lib/asterisk/sounds/custom/${APPTTIME}.${APPTDT}.${APPTPHONE}.gsm --type audio/gsm)
exten => h,4,NoOp(Callee hung up. Dialed: ${APPTPHONE}.)
exten => h,5,System(/bin/rm -f /var/lib/asterisk/sounds/custom/${APPTTIME}.${APPTDT}.${APPTPHONE}.gsm)
exten => h,6,Hangup

[custom-callboth]
exten => _1NXXNXXXXXX,1,Wait(1)
exten => _1NXXNXXXXXX,2,Background(pls-wait-connect-call)
exten => _1NXXNXXXXXX,3,Macro(dialout-trunk,1,${EXTEN},)
exten => _1NXXNXXXXXX,4,Macro(dialout-trunk,2,${EXTEN},)
exten => _1NXXNXXXXXX,5,Macro(dialout-trunk,3,${EXTEN},)
exten => _1NXXNXXXXXX,6,Macro(outisbusy) ; No available circuits
exten => _NXXNXXXXXX,1,Wait(1)
exten => _NXXNXXXXXX,2,Background(pls-wait-connect-call)
exten => _NXXNXXXXXX,3,Macro(dialout-trunk,1,${EXTEN},)
exten => _NXXNXXXXXX,4,Macro(dialout-trunk,2,${EXTEN},)
exten => _NXXNXXXXXX,5,Macro(dialout-trunk,3,${EXTEN},)
exten => _NXXNXXXXXX,6,Macro(outisbusy) ; No available circuits

[custom-fax-iaxmodem]
exten => s,1,Dial(IAX2/iax-fax0/${EXTEN})
exten => s,n,Dial(IAX2/iax-fax1/${EXTEN})
exten => s,n,Dial(IAX2/iax-fax2/${EXTEN})
exten => s,n,Dial(IAX2/iax-fax3/${EXTEN})
exten => s,n,Busy
exten => s,n,Hangup
 
[from-fax]
exten => _x.,1,Dial(local/${EXTEN}@from-internal)
exten => _x.,n,Hangup

[motion-alarm]
exten => s,1,Set(LANGUAGE()=es)
exten => s,n,Answer
exten => s,n,Wait(1)
exten => s,n,Playback(activated)
exten => s,n,Playback(activated)
exten => s,n,Flite("Teyta is on the move")
exten => s,n,Flite("Teyta is on the move")
exten => s,n,Hangup

[motion-alarm-lostcamera]
exten => s,1,Set(LANGUAGE()=es)
exten => s,n,Answer
exten => s,n,Wait(1)
exten => s,n,Flite("Houston we have a problem. The Raspberry pi has lost the connection with the camera.")
exten => s,n,Flite("Please make sure the power is on and it is connected to the network")
exten => s,n,Flite("If you don't need me right now you can turn off motion detection by calling me back and pressing 77")
exten => s,n,Hangup

